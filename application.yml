server:
  port: 8081

spring:
  application:
    name: kafkaservice

  datasource:
    url: jdbc:postgresql://localhost:5432/userdb
    username: postgres
    password: 123456

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      group-id: user-service-group
      auto-offset-reset: earliest
      enable-auto-commit: true
      max-poll-records: 500
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer:  org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: "com.example.kafkaservice.model"
        spring.json.value.default.type: "com.example.kafkaservice.model.KafkaMessage"
        spring.json.use.type.headers: false
    listener:
      missing-topics-fatal: false

kafka:
  topics:
    write: user.write.service.topic
    read: user.read.service.topic
    input: ${kafka.topics.write}

user:
  write:
    service:
      topic: user.write.service.topic
